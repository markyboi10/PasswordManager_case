/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

//import static Driver.Main.saltString;
import Driver.Main;
import static Driver.Main.saltString;
import static Driver.Main.vaultManager;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import data.managers.VaultManager;
import data.objects.AccountValue;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.AEADBadTagException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import org.apache.commons.lang3.RandomStringUtils;
import security.Scrypt_And_Encrypt;
import static security.Scrypt_And_Encrypt.globalSalt;
import security.SecureKeyStore;

/**
 *
 * @author Mark Case
 */
public class myGUI extends javax.swing.JFrame {

    private static String newURL = null;
    private static String newUser = null;
    private static String newPassword = null;
    private static String salt;
    List<AccountValue> users = new ArrayList<>();
    File vaultFile = new File(VaultManager.getFILE_NAME());
    /**
     * Creates new form myGUI
     */
    public myGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        root_pane = new keeptoo.KGradientPanel();
        passwordManager_label = new javax.swing.JLabel();
        newAccount_label = new javax.swing.JLabel();
        newUser_textField = new javax.swing.JTextField();
        username_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        website_label = new javax.swing.JLabel();
        newWebsite_textField = new javax.swing.JTextField();
        newPassword_textField = new javax.swing.JTextField();
        generatePassword_btn = new javax.swing.JButton();
        addToManager_btn = new javax.swing.JButton();
        existingWebsite_textField = new javax.swing.JTextField();
        findExistingAccountDetails_label = new javax.swing.JLabel();
        existingWebsite_label = new javax.swing.JLabel();
        accountInfo_formattedField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        root_pane.setkEndColor(new java.awt.Color(176, 106, 179));
        root_pane.setkGradientFocus(850);
        root_pane.setkStartColor(new java.awt.Color(69, 104, 220));

        passwordManager_label.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        passwordManager_label.setForeground(new java.awt.Color(204, 204, 204));
        passwordManager_label.setText("Password Manager");

        newAccount_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        newAccount_label.setForeground(new java.awt.Color(204, 204, 204));
        newAccount_label.setText("New Account:");

        newUser_textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newUser_textFieldFocusLost(evt);
            }
        });
        newUser_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUser_textFieldActionPerformed(evt);
            }
        });

        username_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        username_label.setText("Username:");

        password_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        password_label.setText("Password:");

        website_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        website_label.setText("Website:");

        newWebsite_textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newWebsite_textFieldFocusLost(evt);
            }
        });
        newWebsite_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWebsite_textFieldActionPerformed(evt);
            }
        });

        newPassword_textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newPassword_textFieldFocusLost(evt);
            }
        });
        newPassword_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPassword_textFieldActionPerformed(evt);
            }
        });

        generatePassword_btn.setText("Generate Secure Password");
        generatePassword_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePassword_btnActionPerformed(evt);
            }
        });

        addToManager_btn.setText("Add to Manager");
        addToManager_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToManager_btnActionPerformed(evt);
            }
        });

        existingWebsite_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingWebsite_textFieldActionPerformed(evt);
            }
        });
        existingWebsite_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                existingWebsite_textFieldKeyPressed(evt);
            }
        });

        findExistingAccountDetails_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        findExistingAccountDetails_label.setText("Find Existing Account Details:");

        existingWebsite_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        existingWebsite_label.setText("Website:");

        javax.swing.GroupLayout root_paneLayout = new javax.swing.GroupLayout(root_pane);
        root_pane.setLayout(root_paneLayout);
        root_paneLayout.setHorizontalGroup(
            root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, root_paneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(root_paneLayout.createSequentialGroup()
                        .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newAccount_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(root_paneLayout.createSequentialGroup()
                                .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addToManager_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(newPassword_textField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(generatePassword_btn))
                            .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, root_paneLayout.createSequentialGroup()
                                    .addComponent(website_label, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(newWebsite_textField))
                                .addGroup(root_paneLayout.createSequentialGroup()
                                    .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(newUser_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, root_paneLayout.createSequentialGroup()
                                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(root_paneLayout.createSequentialGroup()
                                        .addComponent(existingWebsite_label, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingWebsite_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(accountInfo_formattedField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, root_paneLayout.createSequentialGroup()
                                .addComponent(findExistingAccountDetails_label)
                                .addGap(43, 43, 43))))
                    .addGroup(root_paneLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(passwordManager_label)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        root_paneLayout.setVerticalGroup(
            root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(root_paneLayout.createSequentialGroup()
                .addComponent(passwordManager_label)
                .addGap(24, 24, 24)
                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newAccount_label)
                    .addComponent(findExistingAccountDetails_label))
                .addGap(18, 18, 18)
                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(existingWebsite_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(website_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newWebsite_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(existingWebsite_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(root_paneLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newUser_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(root_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newPassword_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(generatePassword_btn))
                        .addGap(43, 43, 43)
                        .addComponent(addToManager_btn))
                    .addGroup(root_paneLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(accountInfo_formattedField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newWebsite_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWebsite_textFieldActionPerformed
        //newURL = newWebsite_textField.getText();
    }//GEN-LAST:event_newWebsite_textFieldActionPerformed

    private void newUser_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUser_textFieldActionPerformed
        //newUser = newUser_textField.getText();
    }//GEN-LAST:event_newUser_textFieldActionPerformed

    private void newPassword_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPassword_textFieldActionPerformed
//        newPassword = newPassword_textField.getText();
//        System.out.println(newPassword);
    }//GEN-LAST:event_newPassword_textFieldActionPerformed

    private void addToManager_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToManager_btnActionPerformed
        try {
            Scrypt_And_Encrypt.encrypt(newURL, newUser, newPassword); // Call encryption
        } catch (NoSuchAlgorithmException | InvalidKeySpecException | NoSuchPaddingException | InvalidKeyException | InvalidAlgorithmParameterException | IllegalBlockSizeException | BadPaddingException | IOException ex) {
            Logger.getLogger(myGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList encryptedValues = Scrypt_And_Encrypt.getEncryptedValues(); // Grab return array from scrypt_and_encrypt

            /*
            Parse the returned array
            */
            String joinedString = String.join(",", encryptedValues);
            // Remove the brackets and split the string by comma
            String[] values = joinedString.substring(1, joinedString.length()).split(",");
            // Extract the values by splitting each string by colon and stripping the white spaces
            String url = values[0].split(":")[1].trim();
            String username = values[1].split(":")[1].trim();
            String cipherText = values[2].split(":")[1].trim();
            String key = values[3].split(":")[1].trim(); // Not used rn
            String iv = values[4].split(":")[1].trim();
            salt = values[5].split(":")[1].trim();
            System.out.println("");
            System.out.println("```");
            System.out.println("The return array: " + encryptedValues);
            System.out.println("```");
            System.out.println("");
            /*
             Pass parameters from returned array, this updates the vault with new account info
             */
            vaultManager.addAccountToVault(salt, username, cipherText, iv, url); 
    }//GEN-LAST:event_addToManager_btnActionPerformed

    private void newPassword_textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPassword_textFieldFocusLost
        newPassword = newPassword_textField.getText();
    }//GEN-LAST:event_newPassword_textFieldFocusLost

    private void newUser_textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newUser_textFieldFocusLost
        newUser = newUser_textField.getText();
    }//GEN-LAST:event_newUser_textFieldFocusLost

    private void newWebsite_textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newWebsite_textFieldFocusLost
       newURL = newWebsite_textField.getText();
    }//GEN-LAST:event_newWebsite_textFieldFocusLost

    private void generatePassword_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePassword_btnActionPerformed
        newPassword_textField.setText("");
        char[] possibleCharacters = ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()-_=+[{]}\\|;:\'\",<.>/?").toCharArray();
                String randomStr = RandomStringUtils.random(70, 0, possibleCharacters.length - 1, false, false, possibleCharacters, new SecureRandom());
                System.out.println(randomStr);
                newPassword = randomStr;
    }//GEN-LAST:event_generatePassword_btnActionPerformed

    private void existingWebsite_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingWebsite_textFieldActionPerformed

    }//GEN-LAST:event_existingWebsite_textFieldActionPerformed

    private void existingWebsite_textFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_existingWebsite_textFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//                    // If vault is empty, the salt doesn't exist. So we will create one
//        if (vaultFile.length() == 0) {
//            System.out.println("JSON is empty, creating salt . . .");
//            globalSalt = new byte[16]; // 16 byte IV for an AES key
//            SecureRandom rand = new SecureRandom();
//            rand.nextBytes(globalSalt);
//            System.out.println("Salt is: " + Base64.getEncoder().encodeToString(globalSalt));
//
//        } else { try {
//            // If vault ISN'T empty, use jackson libraries to read JSON and grab the string where  = "Salt:"
//            System.out.println("JSON contains values, locating salt . . .");
//            ObjectMapper objectMapper = new ObjectMapper();
//            JsonNode rootNode = objectMapper.readTree(new File(VaultManager.getFILE_NAME()));
//            saltString = rootNode.get(0).get("salt").asText();
//            System.out.println("Salt is : " + saltString);
//            globalSalt = Base64.getDecoder().decode(saltString);
//            } // End if
//            catch (IOException ex) {
//                Logger.getLogger(myGUI.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        }
            //System.out.println(saltString);
            System.out.println(vaultManager.getAccountFromVault(vaultManager.getVault(salt), existingWebsite_textField.getText()));
            AccountValue accountValues = vaultManager.getAccountFromVault(vaultManager.getVault(salt), existingWebsite_textField.getText());
            // Get some paramters
            String url = accountValues.getUrl();
            String username = accountValues.getUsername();
            String password = accountValues.getPassword();
            String iv = accountValues.getIv();
            
            // Grab key related to URL from secure hash-map
            SecretKey key = SecureKeyStore.getKey(url);
            String keyString = Base64.getEncoder().encodeToString(key.getEncoded());
            System.out.println(keyString); // Test print
            try {
                // Decrypt with parameters
                Scrypt_And_Encrypt.decrypt(password, iv);
            } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException | InvalidAlgorithmParameterException | InvalidKeySpecException | IOException ex) {
                Logger.getLogger(myGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_existingWebsite_textFieldKeyPressed


   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField accountInfo_formattedField;
    private javax.swing.JButton addToManager_btn;
    private javax.swing.JLabel existingWebsite_label;
    private javax.swing.JTextField existingWebsite_textField;
    private javax.swing.JLabel findExistingAccountDetails_label;
    private javax.swing.JButton generatePassword_btn;
    private javax.swing.JLabel newAccount_label;
    private static javax.swing.JTextField newPassword_textField;
    private static javax.swing.JTextField newUser_textField;
    private static javax.swing.JTextField newWebsite_textField;
    private javax.swing.JLabel passwordManager_label;
    private javax.swing.JLabel password_label;
    private keeptoo.KGradientPanel root_pane;
    private javax.swing.JLabel username_label;
    private javax.swing.JLabel website_label;
    // End of variables declaration//GEN-END:variables
}
